---
const personalImageAlt = "Ignacio Escudero Gonzalez";
import { Image } from "astro:assets";
import Badge from "./Badge.astro";
import LinkButton from "./LinkButton.astro";
import Mail from "../icons/Mail.astro";
import Tooltip from "./Tooltip.astro";
---

<div class="contenedor">
  <div class="wrapper">
    <div class="tracker"></div>
    <div class="tracker"></div>
    <div class="tracker"></div>
    <div class="tracker"></div>
    <div class="tracker"></div>
    <div class="tracker"></div>
    <div class="tracker"></div>
    <div class="tracker"></div>
    <div class="tracker"></div>

    <div id="gradientBackground"></div>
    <div id="profileCard">
      <Image
        width={200}
        height={200}
        class="rounded-full shadow-xl p-1 mb-4 mt-2 size-40 lg:size-48"
        src="/src/assets/foto-perfil.jpg"
        loading={"eager"}
        alt={personalImageAlt}
      />
      <h1 class="font-bold text-lg mb-0 text-center">
        Ignacio Escudero Gonzalez
      </h1>
      <span class="text-neutral-800 dark:text-neutral-400 mb-3"
        >Fullstack developer
      </span>
    </div>
  </div>
  <div class="flex justify-center gap-3 items-center z-50">
    <Badge />

    <Tooltip content="ContÃ¡ctate!">
      <LinkButton
        small
        rel="noopener"
        target="_blank"
        href="mailto:ignacioescuderogonzalez@gmail.com"
      >
        <span class="sr-only">Boton de contacto</span>
        <Mail class="size-5" />
      </LinkButton>
    </Tooltip>
  </div>
</div>

<style>
  /*   transition: transform .5s cubic-bezier(.74,.3,.8,.39) */

  .contenedor {
    display: flex;
    flex-direction: column;
    margin: auto;
    @apply gap-5;
    animation:
      slide-right both,
      fade-in both;
    animation-duration: 1.2s;
    animation-delay: 0.8s;
  }

  .wrapper {
    position: relative;
    display: grid;
    grid-template: repeat(3, 1fr) / repeat(3, 1fr);
    margin-inline: auto;
    align-items: center;
    place-self: center;
    /* outline: 4px dotted blue; */
  }

  #profileCard {
    @apply p-4 rounded-3xl bg-neutral-300 dark:bg-neutral-900;
    display: flex;
    position: relative;
    flex-direction: column;
    margin-inline: auto;
    align-items: center;
    max-width: fit-content;
    height: fit-content;
    min-width: fit-content;
    /* opacity: 1; */
    z-index: 10;
    transform-style: preserve-3d;
    transform: perspective(5000px) rotateY(var(--rotateX))
      rotateX(var(--rotateY));
    grid-row: 1 / -1;
    grid-column: 1 / -1;
    transition: transform 200ms ease-in-out;
  }

  #profileCard::before {
    content: "";
    position: absolute;
    border-radius: inherit;
    width: 100%;
    height: 100%;
    /* display: none; */
    @apply scale-100 dark:scale-90;
    z-index: -10;
    background: linear-gradient(
      43deg,
      rgb(65, 88, 208) 0%,
      rgb(200, 80, 192) 46%,
      rgb(255, 204, 112) 100%
    );
    opacity: 1;
    transition: all 300ms;
    transform: translateZ(-50px);
    filter: blur(25px);
    animation:
      /* fade-in 1s both 500ms, */
      grow 2s cubic-bezier(0, 0, 0, 1) 1.8s both,
      glow 2s ease-in 4s infinite both alternate;
  }

  .tracker {
    z-index: 100;
    position: absolute;
    /* outline: 1px solid lime; */
  }

  .tracker:nth-child(1) {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(2) {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(3) {
    grid-column: 3 / 4;
    grid-row: 1 / 2;
    inset: 0;
  }

  .tracker:nth-child(4) {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(5) {
    grid-column: 2 / 3;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(6) {
    grid-column: 3 / 4;
    grid-row: 2 / 3;
    inset: 0;
  }

  .tracker:nth-child(7) {
    grid-column: 1 / 2;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(8) {
    grid-column: 2 / 3;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(9) {
    grid-column: 3 / 4;
    grid-row: 3 / 4;
    inset: 0;
  }

  .tracker:nth-child(1):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(2):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(3):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: 25deg;
  }

  .tracker:nth-child(4):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(5):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(6):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: 0deg;
  }

  .tracker:nth-child(7):hover ~ #profileCard {
    --rotateX: -25deg;
    --rotateY: -25deg;
  }

  .tracker:nth-child(8):hover ~ #profileCard {
    --rotateX: 0deg;
    --rotateY: -25deg;
  }

  .tracker:nth-child(9):hover ~ #profileCard {
    --rotateX: 25deg;
    --rotateY: -25deg;
  }

  .no-select {
    -webkit-touch-callout: none;
    /* iOS Safari */
    -webkit-user-select: none;
    /* Safari */
    /* Konqueror HTML */
    -moz-user-select: none;
    /* Old versions of Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
    user-select: none;
    /* Non-prefixed version, currently
									supported by Chrome, Edge, Opera and Firefox */
  }
</style>
<!-- <script is:inline>
  document.addEventListener("astro:page-load", () => {
    const card = document.querySelector(".wrapper");
    // const cardAnimationArea = document.querySelector(".cardAnimationArea");

    card.addEventListener("mouseleave", () => {
      card.style.setProperty("--rotateY", "0deg");
      card.style.setProperty("--rotateX", "0deg");
    });

    card.addEventListener("mousemove", (event) => {
      rotateElement(event, card);
    });

    function rotateElement(event, element) {
      //get mouse position
      const x = event.clientX;
      const y = event.clientY;
      //find the middle
      const middleX = element.offsetLeft + element.offsetWidth / 2;
      const middleY = element.offsetTop + element.offsetHeight / 2;
      //find the distance from the middle to the mouse
      const distanceX = x - middleX;
      const distanceY = y - middleY;
      //calculate the rotation
      const rotateX = (distanceX / middleX) * 120;
      const rotateY = (distanceY / middleY) * 45;
      //apply the rotation
      element.style.setProperty("--rotateY", rotateX + "deg");
      element.style.setProperty("--rotateX", -1 * rotateY + "deg");
    }
  });
</script> -->
